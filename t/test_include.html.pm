#Autogenerated #And shortend
package Dotiac::DTL::Compiled::reducedtest;
use strict;
use warnings;
our $params={"inc_object"=>1};
my $text2 = "A";
my $name2 = "inc_object";
my $text3 = "A";


#INIT

sub string {
	my $vars=shift;
	my $escape=shift;
	my $r="";
	$r.=$text2;
	my $template2 = Dotiac::DTL::devar_raw($name2,$vars,$escape,@_);
	my $s2=$template2->content();
	if ($template2->scalar()) {
		$template2 = Dotiac::DTL->safenew($template2->string());
	} elsif ($template2->object() and $template2->content->isa("Dotiac::DTL::Template")) {
		$template2=$template2->content;
	} else {
		die "Can't include \"$template2\"";
	}
	die "Cyclic include detected " if $Dotiac::DTL::included{$s2}++;
	$r.=$template2->{first}->string($vars,$escape,@_);
	$Dotiac::DTL::included{$s2}=0;
	$r.=$text3;
	return $r;
}
sub print {
	my $vars=shift;
	my $escape=shift;
	print $text2;
	my $template2 = Dotiac::DTL::devar_raw($name2,$vars,$escape,@_);
	my $s2=$template2->content();
	if ($template2->scalar()) {
		$template2 = Dotiac::DTL->safenew($template2->string());
	} elsif ($template2->object() and $template2->content->isa("Dotiac::DTL::Template")) {
		$template2=$template2->content;
	} else {
		die "Can't include \"$template2\"";
	}
	die "Cyclic include detected " if $Dotiac::DTL::included{$s2}++;
	$template2->{first}->print($vars,$escape,@_);
	$Dotiac::DTL::included{$s2}=0;
	print $text3;
}
sub eval {
	my $vars=shift;
	my $escape=shift;
	my $template2 = Dotiac::DTL::devar_raw($name2,$vars,$escape,@_);
	my $s2=$template2->content();
	if ($template2->scalar()) {
		$template2 = Dotiac::DTL->safenew($template2->string());
	} elsif ($template2->object() and $template2->content->isa("Dotiac::DTL::Template")) {
		$template2=$template2->content;
	} else {
		die "Can't include \"$template2\"";
	}
	die "Cyclic include detected " if $Dotiac::DTL::included{$s2}++;
	$template2->{first}->eval($vars,$escape,@_);
	$Dotiac::DTL::included{$s2}=0;
}
"reducedtest";
